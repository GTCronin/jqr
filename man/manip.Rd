% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/manip.R
\name{manip}
\alias{contains}
\alias{contains_}
\alias{endswith}
\alias{endswith_}
\alias{fromjson}
\alias{index_loc}
\alias{index_loc_}
\alias{join}
\alias{join_}
\alias{ltrimstr}
\alias{ltrimstr_}
\alias{manip}
\alias{rindex_loc}
\alias{rindex_loc_}
\alias{rtrimstr}
\alias{rtrimstr_}
\alias{split}
\alias{split_}
\alias{startswith}
\alias{startswith_}
\alias{tojson}
\alias{tostring}
\alias{unique}
\alias{unique_}
\title{Manipulation operations}
\usage{
join(.data, ...)

join_(.data, ..., .dots)

split(.data, ...)

split_(.data, ..., .dots)

ltrimstr(.data, ...)

ltrimstr_(.data, ..., .dots)

rtrimstr(.data, ...)

rtrimstr_(.data, ..., .dots)

startswith(.data, ...)

startswith_(.data, ..., .dots)

endswith(.data, ...)

endswith_(.data, ..., .dots)

index_loc(.data, ...)

index_loc_(.data, ..., .dots)

rindex_loc(.data, ...)

rindex_loc_(.data, ..., .dots)

tojson(.data)

fromjson(.data)

tostring(.data)

contains(.data, ...)

contains_(.data, ..., .dots)

unique(.data, ...)

unique_(.data, ..., .dots)
}
\arguments{
\item{.data}{input}

\item{...}{Comma separated list of unquoted variable names}

\item{.dots}{Used to work around non-standard evaluation}

\item{dots}{dots}
}
\description{
Manipulation operations
}
\examples{
\dontrun{
# join
jqr('["a","b,c,d","e"]', 'join(", ")')
'["a","b,c,d","e"]' \%>\% join \%>\% jq
'["a","b,c,d","e"]' \%>\% join(`;`) \%>\% jq
'["a","b,c,d","e"]' \%>\% join(`yep`) \%>\% jq

# split
jqr('"a, b,c,d, e"', 'split(", ")')
"a, b,c,d, e" \%>\% split \%>\% jq

# ltrimstr
jqr('["fo", "foo", "barfoo", "foobar", "afoo"]', '[.[]|ltrimstr("foo")]')
'["fo", "foo", "barfoo", "foobar", "afoo"]' \%>\% index() \%>\% ltrimstr(foo) \%>\% jq

# rtrimstr
jqr('["fo", "foo", "barfoo", "foobar", "foob"]', '[.[]|rtrimstr("foo")]')
'["fo", "foo", "barfoo", "foobar", "foob"]' \%>\% index() \%>\% rtrimstr(foo) \%>\% jq

# startswith
jqr('["fo", "foo", "barfoo", "foobar", "barfoob"]', '[.[]|startswith("foo")]')
'["fo", "foo", "barfoo", "foobar", "barfoob"]' \%>\% index \%>\% startswith(foo) \%>\% jq

# endswith
jqr('["fo", "foo", "barfoo", "foobar", "barfoob"]', '[.[]|endswith("foo")]')
'["fo", "foo", "barfoo", "foobar", "barfoob"]' \%>\% index \%>\% endswith(foo) \%>\% jq
'["fo", "foo", "barfoo", "foobar", "barfoob"]' \%>\% index \%>\% endswith(bar) \%>\% jq

# get index (location) of a character
## these don't seem to work right now

# tojson, fromjson, tostring
'[1, "foo", ["foo"]]' \%>\% index \%>\% tostring \%>\% jq
'[1, "foo", ["foo"]]' \%>\% index \%>\% tojson \%>\% jq
'[1, "foo", ["foo"]]' \%>\% index \%>\% tojson \%>\% fromjson \%>\% jq

# contains
'"foobar"' \%>\% contains("bar") \%>\% jq
'["foobar", "foobaz", "blarp"]' \%>\% contains(`["baz", "bar"]`) \%>\% jq
'["foobar", "foobaz", "blarp"]' \%>\% contains(`["bazzzzz", "bar"]`) \%>\% jq
str <- '{"foo": 12, "bar":[1,2,{"barp":12, "blip":13}]}'
str \%>\% contains(`{foo: 12, bar: [{barp: 12}]}`) \%>\% jq
str \%>\% contains(`{foo: 12, bar: [{barp: 15}]}`) \%>\% jq

# unique
'[1,2,5,3,5,3,1,3]' \%>\% unique \%>\% jq
str <- '[{"foo": 1, "bar": 2}, {"foo": 1, "bar": 3}, {"foo": 4, "bar": 5}]'
str \%>\% unique(foo) \%>\% jq
'["chunky", "bacon", "kitten", "cicada", "asparagus"]' \%>\% unique(length) \%>\% jq
}
}

